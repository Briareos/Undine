<script>
    (function () {
        /**
         * Bootstraps the profiler script.
         * Checks if angular/jQuery are present - if not, shows so on the profiler toolbar.
         */
        function loadAngularToolbarProfiler() {
            var statusElement = document.querySelector('#angular_profiler_toolbar .inactive-text');
            if (!window.jQuery) {
                statusElement.innerText = 'Missing jQuery';
            } else if (!window.angular) {
                statusElement.innerText = 'Missing Angular';
            } else {
                try {
                    setupProfiler();
                } catch (e) {
                    if (e.name === 'AngularNotOnBodyError') {
                        statusElement.innerText = 'Angular not on body';
                    }
                }
            }
        }

        /**
         * Symfony loads the toolbar by ajax and it's unknown when, and if, the request will finish.
         * Poll for #angular_profiler_toolbar and initialize the script if toolbar is loaded.
         *
         * @private
         */
        function checkIfToolbarReady() {
            var profilerActive = document.getElementById('angular_profiler_toolbar');
            if (!profilerActive) {
                return setTimeout(checkIfToolbarReady, 100);
            }

            loadAngularToolbarProfiler();
        }


        setTimeout(checkIfToolbarReady, 100);

        var Profiler = (function ($) {
            function Profiler($rootScope) {
                var self = this, digests = 0;

                var unhookDigest = $rootScope.$watch(function () {
                    digests++;
                });

                self.computeWatcherCount = function computeWatcherCount() {
                    var watchers, target, next, count = 0;

                    var current = target = $rootScope;

                    do {
                        if ((watchers = current.$$watchers)) {
                            count += watchers.length;
                        }

                        if (!(next = (current.$$childHead ||
                                (current !== target && current.$$nextSibling)))) {
                            while (current !== target && !(next = current.$$nextSibling)) {
                                current = current.$parent;
                            }
                        }
                    } while ((current = next));

                    return count;
                };

                self.getAndClearDigests = function () {
                    var _digests = digests;
                    digests = 0;
                    return _digests;
                };

                self.destroy = function () {
                    unhookDigest();
                };
            }

            return Profiler;
        })(jQuery);

        function setupProfiler() {
            var $rootScope, activeProfiler;

            try {
                $rootScope = angular.element('body').injector().get('$rootScope');
            } catch (e) {
                e.name = 'AngularNotOnBody';
                throw e;
            }

            function pollLoop() {
                if (!activeProfiler) {
                    return;
                }

                render();
                setTimeout(pollLoop, 1000);
            }

            function render() {
                $digestsTextElement.text(activeProfiler.getAndClearDigests());
                $watchersTextElement.text(activeProfiler.computeWatcherCount());
            }

            function disableProfiler() {
                activeProfiler.destroy();
                activeProfiler = null;
                $activeText.hide();
                $inactiveText.show();
                $infoActive.hide();
                $infoInactive.show();
            }

            function enableProfiler() {
                activeProfiler = new Profiler($rootScope);
                $activeText.show();
                $inactiveText.hide();
                $infoActive.show();
                $infoInactive.hide();

                pollLoop();
            }

            var $toolbarElement = $('#angular_profiler_toolbar');
            var $digestsTextElement = $('.sf-angular-toolbar-digests');
            var $watchersTextElement = $('.sf-angular-toolbar-watchers');

            // toolbar sections
            var $inactiveText = $('.inactive-text', $toolbarElement).text('Enable Profiler');
            var $activeText = $('.active-text', $toolbarElement);

            // info sections
            var $infoInactive = $('.sf-angular-toolbar-info-piece-inactive');
            var $infoActive = $('.sf-angular-toolbar-info-piece-active');

            $toolbarElement.on('click', function () {
                if (activeProfiler) {
                    disableProfiler();
                } else {
                    enableProfiler();
                }
            });

            enableProfiler();
        }
    })();
</script>
