security:
    encoders:
        Undine\Model\User:
            algorithm: bcrypt
            cost:      12
        Undine\Model\Staff:
            algorithm: bcrypt
            cost:      15
    providers:
        user_provider:
            entity:
                class: Undine\Model\User
                property: email
        api_provider:
            id: undine.user_provider.api_token
        staff_provider:
            entity:
                class: Undine\Model\Staff
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin($|/)
            anonymous: ~
            provider: staff_provider
            form_login:
                check_path:             admin-login_check
                username_parameter:     email
                password_parameter:     password
                csrf_provider:          security.csrf.token_manager
                csrf_parameter:         token
                intention:              authenticate
                post_only:              true
                login_path:             admin-login
                default_target_path:    admin-home
            remember_me:
                key:                    %secret%
                name:                   ADMINREMEMBERME
                secure:                 false
                httponly:               true
                remember_me_parameter:  rememberMe
            logout:
                csrf_token_generator: security.csrf.token_manager
                csrf_parameter:       token
                csrf_token_id:        logout
                path:                 admin-logout
        # The session matcher must go before the token matcher because it's more specific (it requires a header).
        api_session:
            anonymous: ~
            request_matcher: undine.request_matcher.api_session
            context: web
        api_token:
            provider: api_provider
            request_matcher: undine.request_matcher.api_token
            stateless: true
            anonymous: ~
            simple_preauth:
                authenticator: undine.authenticator.api_token
        web:
            anonymous: ~
            context: web
            form_login:
                login_path:             web-login
                check_path:             web-login_check
                username_parameter:     email
                password_parameter:     password
                csrf_parameter:         token
                csrf_provider:          security.csrf.token_manager
                intention:              authenticate
                post_only:              true
                default_target_path:    web-home
            remember_me:
                key:                    %secret%
                name:                   WEBREMEMBERME
                secure:                 false
                httponly:               true
                remember_me_parameter:  rememberMe
            logout:
                csrf_token_generator: security.csrf.token_manager
                csrf_parameter:       token
                csrf_token_id:        logout
                path:                 web-logout
    access_control:
        - { path: ^/admin/login(_check)?$, roles: IS_AUTHENTICATED_ANONYMOUSLY } # requires_channel: https
        - { path: ^/admin($|/), roles: ROLE_ADMIN } # requires_channel: https
        - { path: ^/api/api\.test$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api($|/), roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/dashboard($|/), roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/delete-account($|/), roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

